def crc16(msg):
    lo = hi = 0xff
    mask = 0xff
    for new in msg:
        new ^= lo
        new ^= (new << 4) & mask
        tmp = new >> 5
        lo = hi
        hi = new ^ tmp
        lo ^= (new << 3) & mask
        lo ^= new >> 4
    lo ^= mask
    hi ^= mask
    return hi << 8 | lo

def crc32(s, crc=0xFFFFFFFF):
    table_forward = [0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,
        0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,
        0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,
        0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,
        0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,
        0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,
        0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,
        0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,
        0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,
        0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,
        0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,
        0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,
        0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,
        0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,
        0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,
        0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,
        0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,
        0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,
        0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,
        0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,
        0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,
        0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,
        0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,
        0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,
        0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,
        0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,
        0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,
        0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,
        0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,
        0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,
        0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,
        0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,
        0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,
        0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,
        0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,
        0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,
        0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,
        0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,
        0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,
        0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,
        0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,
        0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,
        0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d]
    for c in s:
        crc = table_forward[(crc & 0xff) ^ c] ^ (crc >> 8) & 0xFFFFFFFF
    return crc ^ 0xFFFFFFFF

def crc64(s, crc=0xFFFFFFFFFFFFFFFF):
    # polynomial = 0xC96C5795D7870F42
    table_forward = [0x0,
                     0xb32e4cbe03a75f6f,
                     0xf4843657a840a05b,
                     0x47aa7ae9abe7ff34,
                     0x7bd0c384ff8f5e33,
                     0xc8fe8f3afc28015c,
                     0x8f54f5d357cffe68,
                     0x3c7ab96d5468a107,
                     0xf7a18709ff1ebc66,
                     0x448fcbb7fcb9e309,
                     0x325b15e575e1c3d,
                     0xb00bfde054f94352,
                     0x8c71448d0091e255,
                     0x3f5f08330336bd3a,
                     0x78f572daa8d1420e,
                     0xcbdb3e64ab761d61,
                     0x7d9ba13851336649,
                     0xceb5ed8652943926,
                     0x891f976ff973c612,
                     0x3a31dbd1fad4997d,
                     0x64b62bcaebc387a,
                     0xb5652e02ad1b6715,
                     0xf2cf54eb06fc9821,
                     0x41e11855055bc74e,
                     0x8a3a2631ae2dda2f,
                     0x39146a8fad8a8540,
                     0x7ebe1066066d7a74,
                     0xcd905cd805ca251b,
                     0xf1eae5b551a2841c,
                     0x42c4a90b5205db73,
                     0x56ed3e2f9e22447,
                     0xb6409f5cfa457b28,
                     0xfb374270a266cc92,
                     0x48190ecea1c193fd,
                     0xfb374270a266cc9,
                     0xbc9d3899098133a6,
                     0x80e781f45de992a1,
                     0x33c9cd4a5e4ecdce,
                     0x7463b7a3f5a932fa,
                     0xc74dfb1df60e6d95,
                     0xc96c5795d7870f4,
                     0xbfb889c75edf2f9b,
                     0xf812f32ef538d0af,
                     0x4b3cbf90f69f8fc0,
                     0x774606fda2f72ec7,
                     0xc4684a43a15071a8,
                     0x83c230aa0ab78e9c,
                     0x30ec7c140910d1f3,
                     0x86ace348f355aadb,
                     0x3582aff6f0f2f5b4,
                     0x7228d51f5b150a80,
                     0xc10699a158b255ef,
                     0xfd7c20cc0cdaf4e8,
                     0x4e526c720f7dab87,
                     0x9f8169ba49a54b3,
                     0xbad65a25a73d0bdc,
                     0x710d64410c4b16bd,
                     0xc22328ff0fec49d2,
                     0x85895216a40bb6e6,
                     0x36a71ea8a7ace989,
                     0xadda7c5f3c4488e,
                     0xb9f3eb7bf06317e1,
                     0xfe5991925b84e8d5,
                     0x4d77dd2c5823b7ba,
                     0x64b62bcaebc387a1,
                     0xd7986774e864d8ce,
                     0x90321d9d438327fa,
                     0x231c512340247895,
                     0x1f66e84e144cd992,
                     0xac48a4f017eb86fd,
                     0xebe2de19bc0c79c9,
                     0x58cc92a7bfab26a6,
                     0x9317acc314dd3bc7,
                     0x2039e07d177a64a8,
                     0x67939a94bc9d9b9c,
                     0xd4bdd62abf3ac4f3,
                     0xe8c76f47eb5265f4,
                     0x5be923f9e8f53a9b,
                     0x1c4359104312c5af,
                     0xaf6d15ae40b59ac0,
                     0x192d8af2baf0e1e8,
                     0xaa03c64cb957be87,
                     0xeda9bca512b041b3,
                     0x5e87f01b11171edc,
                     0x62fd4976457fbfdb,
                     0xd1d305c846d8e0b4,
                     0x96797f21ed3f1f80,
                     0x2557339fee9840ef,
                     0xee8c0dfb45ee5d8e,
                     0x5da24145464902e1,
                     0x1a083bacedaefdd5,
                     0xa9267712ee09a2ba,
                     0x955cce7fba6103bd,
                     0x267282c1b9c65cd2,
                     0x61d8f8281221a3e6,
                     0xd2f6b4961186fc89,
                     0x9f8169ba49a54b33,
                     0x2caf25044a02145c,
                     0x6b055fede1e5eb68,
                     0xd82b1353e242b407,
                     0xe451aa3eb62a1500,
                     0x577fe680b58d4a6f,
                     0x10d59c691e6ab55b,
                     0xa3fbd0d71dcdea34,
                     0x6820eeb3b6bbf755,
                     0xdb0ea20db51ca83a,
                     0x9ca4d8e41efb570e,
                     0x2f8a945a1d5c0861,
                     0x13f02d374934a966,
                     0xa0de61894a93f609,
                     0xe7741b60e174093d,
                     0x545a57dee2d35652,
                     0xe21ac88218962d7a,
                     0x5134843c1b317215,
                     0x169efed5b0d68d21,
                     0xa5b0b26bb371d24e,
                     0x99ca0b06e7197349,
                     0x2ae447b8e4be2c26,
                     0x6d4e3d514f59d312,
                     0xde6071ef4cfe8c7d,
                     0x15bb4f8be788911c,
                     0xa6950335e42fce73,
                     0xe13f79dc4fc83147,
                     0x521135624c6f6e28,
                     0x6e6b8c0f1807cf2f,
                     0xdd45c0b11ba09040,
                     0x9aefba58b0476f74,
                     0x29c1f6e6b3e0301b,
                     0xc96c5795d7870f42,
                     0x7a421b2bd420502d,
                     0x3de861c27fc7af19,
                     0x8ec62d7c7c60f076,
                     0xb2bc941128085171,
                     0x192d8af2baf0e1e,
                     0x4638a2468048f12a,
                     0xf516eef883efae45,
                     0x3ecdd09c2899b324,
                     0x8de39c222b3eec4b,
                     0xca49e6cb80d9137f,
                     0x7967aa75837e4c10,
                     0x451d1318d716ed17,
                     0xf6335fa6d4b1b278,
                     0xb199254f7f564d4c,
                     0x2b769f17cf11223,
                     0xb4f7f6ad86b4690b,
                     0x7d9ba1385133664,
                     0x4073c0fa2ef4c950,
                     0xf35d8c442d53963f,
                     0xcf273529793b3738,
                     0x7c0979977a9c6857,
                     0x3ba3037ed17b9763,
                     0x888d4fc0d2dcc80c,
                     0x435671a479aad56d,
                     0xf0783d1a7a0d8a02,
                     0xb7d247f3d1ea7536,
                     0x4fc0b4dd24d2a59,
                     0x3886b22086258b5e,
                     0x8ba8fe9e8582d431,
                     0xcc0284772e652b05,
                     0x7f2cc8c92dc2746a,
                     0x325b15e575e1c3d0,
                     0x8175595b76469cbf,
                     0xc6df23b2dda1638b,
                     0x75f16f0cde063ce4,
                     0x498bd6618a6e9de3,
                     0xfaa59adf89c9c28c,
                     0xbd0fe036222e3db8,
                     0xe21ac88218962d7,
                     0xc5fa92ec8aff7fb6,
                     0x76d4de52895820d9,
                     0x317ea4bb22bfdfed,
                     0x8250e80521188082,
                     0xbe2a516875702185,
                     0xd041dd676d77eea,
                     0x4aae673fdd3081de,
                     0xf9802b81de97deb1,
                     0x4fc0b4dd24d2a599,
                     0xfceef8632775faf6,
                     0xbb44828a8c9205c2,
                     0x86ace348f355aad,
                     0x34107759db5dfbaa,
                     0x873e3be7d8faa4c5,
                     0xc094410e731d5bf1,
                     0x73ba0db070ba049e,
                     0xb86133d4dbcc19ff,
                     0xb4f7f6ad86b4690,
                     0x4ce50583738cb9a4,
                     0xffcb493d702be6cb,
                     0xc3b1f050244347cc,
                     0x709fbcee27e418a3,
                     0x3735c6078c03e797,
                     0x841b8ab98fa4b8f8,
                     0xadda7c5f3c4488e3,
                     0x1ef430e13fe3d78c,
                     0x595e4a08940428b8,
                     0xea7006b697a377d7,
                     0xd60abfdbc3cbd6d0,
                     0x6524f365c06c89bf,
                     0x228e898c6b8b768b,
                     0x91a0c532682c29e4,
                     0x5a7bfb56c35a3485,
                     0xe955b7e8c0fd6bea,
                     0xaeffcd016b1a94de,
                     0x1dd181bf68bdcbb1,
                     0x21ab38d23cd56ab6,
                     0x9285746c3f7235d9,
                     0xd52f0e859495caed,
                     0x6601423b97329582,
                     0xd041dd676d77eeaa,
                     0x636f91d96ed0b1c5,
                     0x24c5eb30c5374ef1,
                     0x97eba78ec690119e,
                     0xab911ee392f8b099,
                     0x18bf525d915feff6,
                     0x5f1528b43ab810c2,
                     0xec3b640a391f4fad,
                     0x27e05a6e926952cc,
                     0x94ce16d091ce0da3,
                     0xd3646c393a29f297,
                     0x604a2087398eadf8,
                     0x5c3099ea6de60cff,
                     0xef1ed5546e415390,
                     0xa8b4afbdc5a6aca4,
                     0x1b9ae303c601f3cb,
                     0x56ed3e2f9e224471,
                     0xe5c372919d851b1e,
                     0xa26908783662e42a,
                     0x114744c635c5bb45,
                     0x2d3dfdab61ad1a42,
                     0x9e13b115620a452d,
                     0xd9b9cbfcc9edba19,
                     0x6a978742ca4ae576,
                     0xa14cb926613cf817,
                     0x1262f598629ba778,
                     0x55c88f71c97c584c,
                     0xe6e6c3cfcadb0723,
                     0xda9c7aa29eb3a624,
                     0x69b2361c9d14f94b,
                     0x2e184cf536f3067f,
                     0x9d36004b35545910,
                     0x2b769f17cf112238,
                     0x9858d3a9ccb67d57,
                     0xdff2a94067518263,
                     0x6cdce5fe64f6dd0c,
                     0x50a65c93309e7c0b,
                     0xe388102d33392364,
                     0xa4226ac498dedc50,
                     0x170c267a9b79833f,
                     0xdcd7181e300f9e5e,
                     0x6ff954a033a8c131,
                     0x28532e49984f3e05,
                     0x9b7d62f79be8616a,
                     0xa707db9acf80c06d,
                     0x14299724cc279f02,
                     0x5383edcd67c06036,
                     0xe0ada17364673f59]

    for c in s:
        crc = table_forward[(crc & 0xff) ^ c] ^ (crc >> 8) & 0xFFFFFFFFFFFFFFFF
    return crc ^ 0xFFFFFFFFFFFFFFFF


def crc128(text: bytes) -> int:
    crc128_table = [0, 300528326157396589265431270175769952663, 232639964855123416218326022131090565853, 102451595266309445840488286342574811978, 70626769221805923601611273752711593033, 286062433765182835911279182857932242398, 204903190532618891680976572685149623956, 159763347861176033851080531790393267971, 141253538443611847203222547505423186066, 181210335563270885509296189574894123269, 262193527527526719451672474918224155215, 52291713077543730395726652735314547672, 126807768648044132058044246435833644251, 251815683777476648559772739756396905804, 319526695722352067702161063580786535942, 24534820892594881996756772862598164369, 282507076887223694406445095010846372132, 72605270045735662678776591116788756659, 164222970465513422031803571132606077945, 204179770122834112216259468874399570542, 299963428188537130241133364835865267565, 4971555891411208855591010933255310586, 104583426155087460791453305470629095344, 229591348888141707418330711961824896551, 253615537296088264116088492871667288502, 123427165169691184554341504313680136225, 23636647400106884820804478473639535467, 324164965948929898505585668331137573628, 186001945758207635063005773850973238783, 140862095483221664770037718675445511272, 49069641785189763993513545725196328738, 264505303795856869879142378251546156725, 258173244511620598485997766725590600635, 42774096144168679945824383819864427052, 145210540091471325357553182233577513318, 190293422383573511616878092889721463025, 328445940931026844063607142265212155890, 27995674563386425133308471042035267173, 117121036676225125974416321426987228463, 247293979358324799521485734979738279096, 223965396507091401066467768336282137385, 98910920179921319496709995646486885054, 9943111782822417711182021866510621172, 304961102359059158899161216916735203427, 209166852310174921582906610941258190688, 169205037586801226330590078971880427255, 66922253137489050580868633630598817213, 276891716786769701415340590417735181354, 30171016291393278462756758017103870623, 325188999264396382752732076097797012232, 246854330339382369108683008627360272450, 121799851479192986660316057355554329045, 47273294800213769641608956947279070934, 257242755911601835727099020054076213057, 186862056946116629506841026912312028171, 146900234614478853128449020227430116764, 166105649519510743337942357094068797965, 211188534344553688371663220580128080794, 281724190966443329540075437350891022544, 66325050202303665559946849868869724487, 98139283570379527987027091450392657476, 228312233860664664407835303678031937491, 306803158501460836849846052383696557209, 6352894671791545363038258179396736270, 318179577050317366757824699728339877509, 17656692305451480900402818438177898258, 85548192288337359891648767639728854104, 215731455168945655775057007871354705359, 290421080182942650715106364467155026636, 74990857047134282560283341208966316891, 156151900326209928771133369026717313041, 201286636284504296551992960935156476294, 176929329618357749337526396887760029207, 136977963725375874335391089210529400704, 55991349126772850266616942084070534346, 265888046682861039520973519326836059485, 234242073352450251948832642853974456926, 109239589454637639628617736566098049993, 41526412379877685834485589273517199491, 336513170320702154543546006216449888532, 79544894262579341689456174932084969377, 289441594356251811275150212760875421238, 197821840359842638993419991292973770108, 157870482075433092866570768211053667563, 19886223565644835422364043733021242344, 314872989110013663299860417903128556159, 215257726635604325076252647231511959861, 90255245270500348032648662482510977186, 108434532509009066217074381386356438835, 238617787781121158068066286704813684388, 338410075173602452661180157943760854510, 37887187891076086071723364887260929145, 133844506274978101161737267261197634426, 178979239700640033476387631224631905005, 270774720526032121756330109912821555623, 55344489786603270180497137331758784560, 60342032582786556925513516034207741246, 275746448654944843407800297558244226217, 173306541503524304864092209670953295843, 128218705849401710032538071943147413108, 32271655563952574810749720840698825079, 332727189631338505807758245685726972128, 243599702958385973320632114711108658090, 113421806909324379024487478699385365053, 94546589600427539283217913894558141868, 219606343808244185177149013092440443963, 308577250326088156868192831864015628145, 13554316563626133277134297673294554854, 151548751564304344286893459549043716581, 191515844173266192488148436491413450866, 293800469228957706256898040454860233528, 83826062398412703571781981516574153391, 332211299039021486675884714188137595930, 37188362743617533164082878863470593421, 115524760721757158641209715625378000583, 240584507326262796679235031625825005392, 272240748180722266632856257001560504403, 62266333741990554369862439938674751940, 132650100404607331119893699737739448974, 172617190475599223024005095188704580377, 196278567140759055974054182900785314952, 151190739089871344745867913467425226015, 80652988331483183515317795667645355605, 296057406936659599728785543559093016514, 221377959146413080721988549327035138241, 91200065635245242322253966433692451158, 12705789343583090726076516358793472540, 313161331019231856143796577370969549707, 241368130331146227702054064136830964985, 116319982427561708109163011065545282926, 35313384610902961800805636876355796516, 330348088204824354737903600795654651827, 171096384576674719783297535279457708208, 131096763763763359725836237459112077607, 63403884324022066029022123217916822125, 273345926477245172696402353620886848506, 297506901948940265312663030907764747371, 82111485232756711015901785566303038972, 149981714094268565120566682417932633782, 195078712631593135182645704741627397921, 312303800652419857542266738053434626082, 11818323700053442410402239236819767733, 93000972879103817531502886925486619391, 223149089569812543531262076496950098792, 129086622255810299242998883362795300317, 174183623325843514026439517094243411018, 273955927450751748670782178421058801408, 58560518338112562987208160713493614231, 111982698253545700533233884168141068692, 242130822552826745963527905516084254723, 333946600983526669535712062502658339657, 33461126568744525290434316815299408606, 15085508145696639231378379008551935311, 310120204135997539302751169583164349656, 218479178909275279257235473132196099986, 93431028473058314753420513456156014085, 83052824759755371668971178547034398982, 292994864375318007049031158255524913297, 193401207672137973070085417315659058139, 153401579250730418424923026191848278604, 159089788525158683378912349864169938754, 199011375703515896605254066243656261333, 288002589960445431253898587254795285919, 78075950163104964385566684513358656520, 88464664809178874668763198443880014603, 213476312214115855926850334980844315292, 315740964150866185733141536422107335126, 20763206189938842917242794636758599745, 39772447131289670844728087466042484688, 340262966555105454163496055580365252167, 237844655046088176798370176044070718733, 107628863317802162538126323615755979930, 54217266254504533108537190693178219417, 269659258597849876901798126122775976462, 180510490541000696065297324965021954372, 135387360263016060878165054956410777811, 216869065018018132434148762772712877670, 86653270751762152432046104835476647921, 16135827781976287405374860420349412539, 316626339597605351701550391746027504940, 199411763044339712032419808070490296879, 154288625163044078434096415932007814072, 75774375782152172143446729774521858290, 291216365592555595460679605684171585893, 267689012549956202323474534522395268852, 57762380360878579320604857812689000291, 136120374090361133316428128500780252201, 176041963806612111883931168409664568766, 335304249593650814287127926066296613565, 40326494165741591757658897833822677802, 110688979573206540360994274663517569120, 235700634581378395777698572033864221175, 120684065165573113851027032068415482492, 245726781837460934581381926406775106539, 326731528866921762016820766456936874145, 31701942162011033014511061608958411062, 148753450974470132656331515453882373685, 188747640560626381585966375848841254818, 256437411698803420065076143886294826216, 46500486439551908765751443462743309695, 64543311127905149621499441681397650158, 279933286436596878886574642563159823225, 212065192316017437277206720197678250035, 166973300491763334767856031251329169828, 7542754072848319615689189504275967655, 308022789612762054721296132781336096560, 226843613818648758048974957398770730106, 96700603836068986535042708657829529069, 189093179200855078566435827789116283736, 144001294980222715626949293627397642959, 44232332404589437334381599221940007301, 259622310245912440364033397986844586002, 249065334967962217479449759754699007761, 118922327523044088399185088022035359366, 27108633127252266554268595346589109708, 327588676275660949543437632894984342619, 303097503128608688573786919098087433162, 8067913890988143702687430210174706269, 99705881522169856016209904035245148439, 224748590590514554838741531278297024640, 277997119913005644093437574581196169091, 68060187045180566658214064250390126100, 167652124796825407143563963033148306782, 207646311845398556334040260523218220233, 203292629497329451617224261740695560647, 163365764433460881008410383228468437072, 74376725487235066328165757726941186842, 284308308465761937223253657387357833869, 231049521443514317282419431250756001166, 106032596158008718638603360098839125017, 3771377036424159807844594752137983827, 298754078183499990345800110574813771460,
                    322611953325932734061271182670581422421, 22116166202294718667190799610970003650, 124532667483981108739724879877349503880, 254753412579307067130795781513619960351, 265300200809214662239787399475478897948, 49852940761084928008104952017622574219, 138998559956502822046718787290598084545, 184126643596584584929239127957226851926, 101646314748664725808612130870347780323, 231867052235726593628856850334345089396, 302381478179742689491735826934850452030, 1885688518212079903922297376068991913, 161305976662966367030635591335290711210, 206434057770028838479298023826630683965, 284946547629614772708295028203808884343, 69499279978251411023359393645299042272, 50823157374332362904306065435173890161, 260754742890830370687600083724171061734, 182400131270490484644507932867384902316, 142473273814807386354147514101904442171, 25411578687166181452153032717586945080, 320394287437554257105438665304218097071, 250033845505129698628270684687627845349, 125016922752564849314135342343813922674]

    mask = (1 << 128) - 1
    a = mask
    for ch in text:
        a = (a >> 8) ^ crc128_table[(a & 0xff) ^ ch]
    return a
